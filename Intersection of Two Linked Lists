

//problem link: https://leetcode.com/problems/intersection-of-two-linked-lists/




/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public int count(ListNode node){
        int s=0;
        while(node!=null){
            s++;
            node=node.next;
        }
        return s;
    }
    public ListNode getIntersectionNode(ListNode headA, ListNode headB) {
        int sizeA=count(headA);
        int sizeB=count(headB);
        int diff=Math.abs(sizeA-sizeB);
        if(sizeA>=sizeB){
            while(diff>0){
                headA=headA.next;
                diff--;
            }
            while(headA!=null && headB!=null){
                if(headA==headB){
                    return headA;
                }
                headA=headA.next;
                headB=headB.next;
            }
        }
        else{
            while(diff>0){
                headB=headB.next;
                diff--;
            }
            while(headA!=null && headB!=null){
                if(headA==headB){
                    return headA;
                }
                headA=headA.next;
                headB=headB.next;
            }
        }
        return null;
        
    }
}
