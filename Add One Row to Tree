//Link: https://leetcode.com/problems/add-one-row-to-tree/


/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* addOneRow(TreeNode* root, int v, int d) {
        if(d==1){
            TreeNode *ans=new TreeNode(v);
            ans->left=root;
            return ans;
        }
        queue<pair<TreeNode*, int>>q;
        q.push({root, 1});
        while(!q.empty()){
            int val=q.front().second;
            TreeNode *curr=q.front().first;
            if(val==d-1){
                break;
            }
            q.pop();
            if(curr->left){
                q.push({curr->left, val+1});
            }
            if(curr->right){
                q.push({curr->right, val+1});
            }
        }
        while(!q.empty()){
            TreeNode *curr=q.front().first;
            q.pop();
            TreeNode *newNode=new TreeNode(v);
            TreeNode *sec=new TreeNode(v);
            newNode->left=curr->left, sec->right=curr->right;
            curr->left=newNode, curr->right=sec;
        }
        return root;
    }
};
