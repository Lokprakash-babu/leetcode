//Link: https://leetcode.com/problems/design-underground-system/


class UndergroundSystem {
    
    
    Map<Integer, Pair<String, Integer>> checkins;
    Map<String, ArrayList<Integer>> places;
    
    public UndergroundSystem() {
        checkins=new HashMap<Integer, Pair<String, Integer>>();
        places=new HashMap<String, ArrayList<Integer>>();
    }
    
    public void checkIn(int id, String stationName, int t) {
        Integer newid=new Integer(id);
        Integer newTime=new Integer(t);
        Pair<String, Integer> p=new Pair<>(stationName, t);
        checkins.put(id, p);
    }
    
    public void checkOut(int id, String stationName, int t) {
        Integer newId=new Integer(id);
        Integer newTime=new Integer(t);
        Pair<String, Integer> p=checkins.get(id);
        String newDestination=p.getKey()+stationName;
        if(places.containsKey(newDestination)){
            ArrayList<Integer>a=places.get(newDestination);
            a.add(newTime-p.getValue());
            places.put(newDestination, a);
        }
        else{
            ArrayList<Integer>a=new ArrayList<Integer>();
            a.add(newTime-p.getValue());
            places.put(newDestination, a);
        }
    }
    
    public double getAverageTime(String startStation, String endStation) {
        ArrayList<Integer>a=places.get(startStation+endStation);
        Integer sum=new Integer(0);
        for(int i=0; i<a.size(); i++){
            sum+=a.get(i);
        }
        return (double)(sum.intValue())/a.size();
    }
}

/**
 * Your UndergroundSystem object will be instantiated and called as such:
 * UndergroundSystem obj = new UndergroundSystem();
 * obj.checkIn(id,stationName,t);
 * obj.checkOut(id,stationName,t);
 * double param_3 = obj.getAverageTime(startStation,endStation);
 */
